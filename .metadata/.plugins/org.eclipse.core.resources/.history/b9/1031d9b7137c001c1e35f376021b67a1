package ex.websocket.controller;

import java.security.Principal;
import java.util.List;

import org.springframework.security.core.AuthenticatedPrincipal;
import org.springframework.security.core.Authentication;
import org.springframework.security.core.annotation.AuthenticationPrincipal;
import org.springframework.security.core.context.SecurityContextHolder;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import ex.websocket.dto.ChatRoom;
import ex.websocket.dto.LoginDto;
import ex.websocket.repository.ChatRoomRepository;
import ex.websocket.service.JwtProvider;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;

@RequiredArgsConstructor
@Controller
@RequestMapping("/chat")
@Slf4j
public class ChatRoomController {
	
	private final ChatRoomRepository chatRoomRepository;
	private final JwtProvider jwtProvider;
	
	@GetMapping("/user")
	@ResponseBody
	public String getUserInfo(@AuthenticationPrincipal LoginDto dto) {
//		Authentication auth = SecurityContextHolder.getContext().getAuthentication();
//		String name = auth.getName();
//		return LoginDto.builder().name(name).token(jwtProvider.generteToken(name)).build();
		log.info("{}",dto);
		return "success";
	}
	
	
	@GetMapping("/room")
	public String rooms(Model model) {
		return "/chat/room";
	}
	
	@PostMapping("/room")
	@ResponseBody
	public ChatRoom createRoom(@RequestParam String name) {
		log.info("name : {}",name);
		return chatRoomRepository.createChatRoom(name);
	}
	
	@GetMapping("/rooms")
	@ResponseBody
	public List<ChatRoom> room() {
		return chatRoomRepository.findAllRoom();
	}
	
	@GetMapping("/room/enter/{roomId}")
	public String roomDetail(Model model, @PathVariable String roomId) {
		log.info("roomId : {}",roomId);
		model.addAttribute("roomId",roomId);
		return "/chat/roomdetail";
	}
	
	@GetMapping("/room/{roomId}")
	@ResponseBody
	public ChatRoom roomInfo(@PathVariable String roomId) {
		return chatRoomRepository.findRoomById(roomId);
	}
}
