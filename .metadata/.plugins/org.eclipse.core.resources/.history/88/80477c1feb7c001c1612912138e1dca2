package ex.websocket.config.handler;

import org.springframework.messaging.Message;
import org.springframework.messaging.MessageChannel;
import org.springframework.messaging.simp.stomp.StompCommand;
import org.springframework.messaging.simp.stomp.StompHeaderAccessor;
import org.springframework.messaging.support.ChannelInterceptor;
import org.springframework.stereotype.Component;

import ex.websocket.service.JwtProvider;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@RequiredArgsConstructor
@Component
public class StompHandler implements ChannelInterceptor{
	private final JwtProvider jwtProvider;

	
	// websocket 을 통해 들어온 요청이 처리되기전 실행
	@Override
	public Message<?> preSend(Message<?> message, MessageChannel channel) {
		StompHeaderAccessor accessor = StompHeaderAccessor.wrap(message);
		if(StompCommand.CONNECT == accessor.getCommand()) {
			// websocket 연결 시 헤더의 jwt token 검증
			String jwtToken = accessor.getFirstNativeHeader("token");
			log.info("CONNECT {}", jwtToken);
		} else if(StompCommand.SUBSCRIBE == accessor.getCommand()) {
			String roomId = 
		}
		
		return message;
	}
	
}
